"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

import kitti.tracked_object_t

class tracked_object_list_t(object):
    __slots__ = ["utime", "size", "objects"]

    def __init__(self):
        self.utime = 0
        self.size = 0
        self.objects = []

    def encode(self):
        buf = BytesIO()
        buf.write(tracked_object_list_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">qi", self.utime, self.size))
        for i0 in range(self.size):
            assert self.objects[i0]._get_packed_fingerprint() == kitti.tracked_object_t._get_packed_fingerprint()
            self.objects[i0]._encode_one(buf)

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != tracked_object_list_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return tracked_object_list_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = tracked_object_list_t()
        self.utime, self.size = struct.unpack(">qi", buf.read(12))
        self.objects = []
        for i0 in range(self.size):
            self.objects.append(kitti.tracked_object_t._decode_one(buf))
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if tracked_object_list_t in parents: return 0
        newparents = parents + [tracked_object_list_t]
        tmphash = (0x6bede020b7d47851+ kitti.tracked_object_t._get_hash_recursive(newparents)) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if tracked_object_list_t._packed_fingerprint is None:
            tracked_object_list_t._packed_fingerprint = struct.pack(">Q", tracked_object_list_t._get_hash_recursive([]))
        return tracked_object_list_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

